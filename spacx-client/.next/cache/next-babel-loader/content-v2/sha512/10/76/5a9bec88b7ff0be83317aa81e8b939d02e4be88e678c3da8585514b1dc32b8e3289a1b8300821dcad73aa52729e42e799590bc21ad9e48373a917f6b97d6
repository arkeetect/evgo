{"ast":null,"code":"import _defineProperty from \"/Users/rahil/evgo/spacx-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rahil/evgo/spacx-client/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nexport default function App(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  var apolloClient = new ApolloClient({\n    uri: \"http://localhost:4000\",\n    cache: new InMemoryCache()\n  });\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: apolloClient,\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rahil/evgo/spacx-client/pages/_app.js"],"names":["ApolloClient","ApolloProvider","InMemoryCache","App","Component","pageProps","apolloClient","uri","cache"],"mappings":";;;;;;;;AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AAEA,eAAe,SAASC,GAAT,OAAqC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,SAAY,QAAZA,SAAY;AAEhD,MAAMC,YAAY,GAAG,IAAIN,YAAJ,CAAiB;AAClCO,IAAAA,GAAG,EAAE,uBAD6B;AAElCC,IAAAA,KAAK,EAAE,IAAIN,aAAJ;AAF2B,GAAjB,CAArB;AAIA,sBACI,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEI,YAAxB;AAAA,2BACA,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KAXuBF,G","sourcesContent":["import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\nexport default function App({Component, pageProps}) {\n\n    const apolloClient = new ApolloClient({\n        uri: \"http://localhost:4000\",\n        cache: new InMemoryCache(),\n    })\n    return (\n        <ApolloProvider client={apolloClient}>\n        <Component {...pageProps} ></Component>\n        </ApolloProvider>\n    )\n}"]},"metadata":{},"sourceType":"module"}